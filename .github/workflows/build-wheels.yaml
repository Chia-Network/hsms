name: Build Wheels
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-wheels:
    runs-on: ${{ matrix.os.runs-on }}
    container: ${{ matrix.os.container }}
    strategy:
      matrix:
        python_version:
          - version: 3.7
            path: 37
          - version: 3.8
            path: 38
          - version: 3.9
            path: 39
          - version: 3.10
            path: 310
        os:
          - container: "quay.io/pypa/manylinux_2_24_x86_64"
            runs-on: "ubuntu-latest"
          - container: "quay.io/pypa/manylinux_2_24_aarch64"
            runs-on: ["linux", "arm64"]

    steps:
      - name: Add safe git directory
        uses: Chia-Network/actions/git-mark-workspace-safe@main

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create venv
        run: /opt/python/cp${{ matrix.python_version.path }}-cp${{ matrix.python_version.path }}/bin/python3 -m venv venv

      - name: Create Wheels
        run: |
          . ./venv/bin/activate
          pip wheel -w dist --no-deps .

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist

      - name: Test for secrets access
        id: check_secrets
        shell: bash
        run: |
          unset HAS_SECRET
          if [ -n "$SECRET" ]; then HAS_SECRET='true' ; fi
          echo ::set-output name=HAS_SECRET::${HAS_SECRET}
        env:
          SECRET: "${{ secrets.test_pypi_password }}"

      - name: Install twine
        run: |
          . ./venv/bin/activate
          pip install twine

      - name: Publish distribution to PyPI
        if: startsWith(github.event.ref, 'refs/tags') && steps.check_secrets.outputs.HAS_SECRET
        env:
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: |
          . ./venv/bin/activate
          twine upload --non-interactive --skip-existing --verbose 'dist/*'

      - name: Publish distribution to Test PyPI
        if: steps.check_secrets.outputs.HAS_SECRET
        env:
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
        run:  |
          . ./venv/bin/activate
          twine upload --non-interactive --skip-existing --verbose 'dist/*'
